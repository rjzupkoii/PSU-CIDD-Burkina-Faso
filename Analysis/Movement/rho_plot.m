% Generate a sweep of syntheic studies with variable Rho values.
addpath('../Common');

% Kadiogo (14) / 453, Kourweogo (16) / 492, Bazega (21) / 371

% Generate our starting directory
warning('off', 'MATLAB:MKDIR:DirectoryExists');
mkdir('plots');

% Load the raw data 
% Rho = 1; Source = 2; Destination = 3; Count = 4;
raw = csvread('data/rho-sweep.csv', 1, 0);

for rho = transpose(unique(raw(:, 1)))
    % Make the directory to work with
    directory = sprintf('rho-%.2f', rho);
    mkdir(directory);
    
    % Generate the samples
    sample_data(raw(raw(:, 1) == rho, 2:4), directory);
        
    % Plot
    data = loadDirectory(directory, true);
    plot_data(data, rho);
        
    % Zip the data, move it to the archive, delete the old directory
    file = append(directory, '.zip');
    zip(file, directory);
    movefile(file, 'archive');
    rmdir(directory, 's');
end

function [] = plot_data(data, rho)
    PROVINCES = { 14, 'Kadiogo'; 16, 'Kourweogo'; 21, 'Bazega' };
    for ndx = 1:3
        id = PROVINCES{ndx, 1};
        name = char(PROVINCES(ndx, 2));
        
        % Create the figure, plot, and save
        fig = figure("Visible", "off");
        set(0, "CurrentFigure", fig);
        set(fig, "Position", [0, 0, 1500, 1500]);
        plotProvience(name, ndx, data, rho, getSurveyPoints(id));
        saveas(fig, sprintf('plots/rho-%.2f-%s.png', rho, name));
        close(fig);
    end
end

function [] = sample_data(data, directory)
    % Kadiogo (14) / 453, Kourweogo (16) / 492, Bazega (21) / 371
    districts = [ 14 453; 16 492; 21 371 ];

    for trial = 1:100
        results = zeros(3, 46); ndx = 1;
        for district = transpose(districts(:, 1))
            % Select just the data we need and determine the odds
            pr = data(data(:, 1) == district, 3);
            pr = pr / sum(pr);

            % Sample
            sample = randsample(1:45, districts(ndx, 2), true, pr);

            % Prepare the results
            results(ndx, 1) = district - 1;
            for ndy = 1:45
                results(ndx, ndy + 1) = sum(sample == ndy);
            end
            ndx = ndx + 1;
        end
        csvwrite(sprintf('%s/rhosample_%03d.csv', directory, trial), results);
    end
end

function [] = plotProvience(label, index, data, rho, points)
    RANGES = [ 0.025, 0.25, 0.5, 0.75, 0.975 ];
    NUDGE = 0.25;

    % Prepare the statistics on the data, note the log2 scale!
    working = log2(transpose(squeeze(data(index, :, :))));
    stats = zeros(5, 45);
    for ndx = 1:45
        stats(:, ndx) = quantile(working(:, ndx), RANGES);
    end
    stats = [stats; log2(points); 1:45];
    stats = transpose(sortrows(transpose(stats), -3));

    % Set -Inf to zero
    % WARNING - This isn't technically proper since log2(0) = NaN 
    % but 2^0 = 1; however, this allows us to plot the lines and the zero
    % survey data as well.
    stats(isinf(stats)) = -1;
    
    x = 1:1:size(stats, 2);
    hold on;
    scatter(x, stats(6, :), 'red', 'filled');   % survey
    scatter(x, stats(2, :), '+', 'black');      % 25%
    scatter(x, stats(3, :), '+', 'black');      % median
    scatter(x, stats(4, :), '+', 'black');      % 75%
        
    for ndx = 1:size(stats, 2)
        % Plot the vertical lines for "box"
        plot( [ndx + NUDGE, ndx + NUDGE], [stats(2, ndx) stats(4, ndx)], 'k-'  );
        plot( [ndx - NUDGE, ndx - NUDGE], [stats(2, ndx) stats(4, ndx)], 'k-' );               
        plot([ndx ndx], [stats(1, ndx) stats(5, ndx)], 'color', 'black');
    end

    title(sprintf(['Syntheic Survey of Trips Generated by Model, ' ...
        'log(rho) = %.2f\nCount of Trips Departing from %s'], rho, label));
    set(gca, 'xtick', 1:45);
    xticklabels(getLabels(stats(7, :)));
    xtickangle(45);
    ylabel('Count of Trips to Destination (log 2)');
    xlabel('Destination Provience');

    % Trick the legend
    h = zeros(1, 1);
    h(1) = scatter(NaN, NaN, 'filled', 'red');
%    h(2) = scatter(NaN, NaN, '^', 'black');
%    h(3) = scatter(NaN, NaN, '*', 'black');
%    h(4) = scatter(NaN, NaN, 'v', 'black');
%    h(5) = plot(NaN, NaN, 'color', [0.25 0.25 0.25]);
    legend(h, 'Survey Data');
    legend boxoff;
    hold off;
end

